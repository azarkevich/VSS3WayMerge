<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEACACECAAAFgAAACgAAAAgAAAAPgAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/MzMA/0BAAP9NTQD/WVkA/2ZmAP9zcwD/gIAA/42NAACZzAD/mZkAAJ/xAACk8AAJp/EA/6WlAA2o
        8gAAq/EACK3xAA+u7wATrfMAIK7yABiw7gAlsusAKrPqADG06QA6tecA/7KyAES35QBJt+QAUrnjAFa6
        4gBjvOAAN7v0AGy93gBDvPUAe7/bAILA2gBMv/UAjcLYAP+/vwCUw9YAUsH1AJzE1QCmxtMAr8fRAFzF
        9QBOx/YAs8jRALrJzwC+ys8AYMj3AMXLzQBlzPcAcsz3AI/S6QB/1PgAidT4AJDV+ACH1/kA/9nZAJra
        +ACX2/kAo+H6AL/l8gCu5fwA/+XlALfn+wC66fsAxu38AM3u/QD/8vIA3/X9AOf3/gDu+v4A+P3/AP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAS0tLS0tLS0tLS0tLSyoUEBAQKktLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLIA8PDw8gS0tL
        S0tLS0tLS0tLS0tLS0tLS0tLS0tLSzIdDw8PDxpLS0tLS0tLS0tLS0tLS0tLS0sjIjBLS0tLSxoPDw8P
        FUtLS0tLSycpS0tLS0tLS0tLJxEQFydLSykbEQ8PDw8QGylLS0seERQnS0tLS0tLSycUDw8PER4XEQ8P
        Dw8PDw8PERopFRAPDxEpS0tLS0tLGA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDxZLS0tLS0syFg8PDw8P
        Dw8PDwwMDAwPDw8PDw8PDw8PKUtLS0tLS0slEA8PDw8PDxIhNzw8OB8SDw8PDw8PDxtLS0tLS0tLSzIc
        Dw8PDw8hP0dKSkpKRj8hCw8PDw8UK0tLS0tLS0tLSyAPDw8KLEdKSkpKSkpKSkYsCw8PDx5LS0tLS0tL
        S0svFg8PCihHSkpKSkpKSkpKSkchCw8PECpLS0tLS0tLSyMPDw8TREpKSkpKSkpKSkpKSkMQDw8PJUtL
        S0svLiciFw8PDzFJSkpKSkdCQ0hKSkpKSjMKDw8XIykuMBcUDw8PDw8OPUpKSkpGJA8PLUlKSkpKOQsP
        Dw8PDxQdDw8PDw8PDxI/SkpKSTYLCwsLO0pKSkpDEgsPDw8PDxcPDw8PDw8PFEFKSkpJMwsPDw80SkpK
        SkYTCw8PDw8PGA8PDw8PDw8SP0pKSko9DgsLEENKSkpKPwwPDw8PDw8WSkpKSkpKSkpKSkpKSkpKSkpK
        SkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSj4IPkpK
        SkpKOgUAAQZFSkpKSkpKSkpKSkpKSkpKSkpKPgg+SkpKSkABAQcHAANKSkpKSkpKSkpKSkpKSkpKSko+
        CD5KSkpKBgA6SkoZABlKSkpKSkpKSkpKSkpKSkpKSj4IPkpKSkoCBkpKGQkAB0pKSkpKSkpKSkpKSkpK
        SkpKPgg+SkpKSgAJSkoHBAQHSkpKSkpKSkpKSkpKSkpKSko+CD5KSkpKAgVKSkpKSkpKSkpKSkpKSkpK
        SkpKSkpKPjUINT5KSkoJACZKShkERUpKSkpKSkpKSkpKSkpKSkoICAgICEpKSkUDAAMDAANKSkpKSkpK
        SkpKSkpKSkpKSj4+Pj4+SkpKSkoNBQUZRUpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpK
        SkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkpKSkr/+B////gf///wH//4+B+f8GAHD+AA
        AAfgAAAH4AAAB/AAAA/wAAAP+AAAH/AAAA/wAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>